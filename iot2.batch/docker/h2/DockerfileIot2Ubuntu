FROM openjdk:23 as builder
RUN $JAVA_HOME/bin/jlink \
         --verbose \
        --add-modules ALL-MODULE-PATH \
         --strip-debug \
         --no-man-pages \
         --no-header-files \
        --compress=2 \
         --output /customjre
FROM ubuntu

ENV SPRING_PROFILES_ACTIVE=h2
ENV USER iot2
ENV HOME=/home/${USER}
ENV APP_DIR ${HOME}/${USER}
ARG DOWNLOAD_H2=https://repo1.maven.org/maven2/com/h2database/h2/2.2.224/h2-2.2.224.jar
ENV DATA_DIR /db
ENV TZ Europe/Berlin
ENV JAVA_HOME ${HOME}/jre-23



RUN apt update --no-install-recommends 
#RUN apt-get install  --no-install-recommends  -y iputils-ping
RUN apt-get install --no-install-recommends  -y curl
RUN apt-get install --no-install-recommends  -y dos2unix
RUN apt-get install --no-install-recommends  -y  tzdata
RUN apt-get install --no-install-recommends -y ca-certificates
RUN apt-get install --no-install-recommends -y dnsutils
RUN apt-get install --no-install-recommends -y adduser



RUN adduser --home ${HOME}  iot2  




COPY --from=builder /customjre $JAVA_HOME

RUN  chown -R ${USER}  ${JAVA_HOME}
RUN  chgrp -R ${USER}  ${JAVA_HOME}



USER ${USER}

RUN mkdir  ${APP_DIR}
  
RUN curl -L ${DOWNLOAD_H2} -o ${APP_DIR}/h2-2.2.224.jar
COPY  --chown=${USER}:${USER} docker/scripts/iot2.sh ${APP_DIR}/
COPY --chown=${USER}:${USER}  docker/scripts/endOfDay.sh ${APP_DIR}/
COPY --chown=${USER}:${USER}  docker/h2/backup.sh ${APP_DIR}/
COPY  --chown=${USER}:${USER} docker/scripts/autoloadWait.sh ${HOME}/autoload.sh
COPY  --chown=${USER}:${USER} docker/h2/startH2.sh ${HOME}/startH2.sh
COPY  --chown=${USER}:${USER} docker/h2/dbready.sh ${APP_DIR}/dbready.sh
COPY  --chown=${USER}:${USER} target/iot2Batch.jar ${APP_DIR}/
RUN dos2unix ${APP_DIR}/iot2.sh
RUN dos2unix ${APP_DIR}/endOfDay.sh
RUN dos2unix ${APP_DIR}/backup.sh
RUN dos2unix ${HOME}/startH2.sh
RUN dos2unix ${HOME}/autoload.sh
RUN dos2unix ${APP_DIR}/dbready.sh



RUN ln -s ${APP_DIR}/iot2.sh ${APP_DIR}/iot2
RUN ln -s ${APP_DIR}/endOfDay.sh ${APP_DIR}/endOfDay
RUN ln -s ${APP_DIR}/backup.sh ${APP_DIR}/backup

ENV PATH $PATH:$APP_DIR:${JAVA_HOME}/bin

WORKDIR ${HOME}

HEALTHCHECK CMD curl --http0.9  --fail --output /dev/null  http://localhost:9092 || exit 1 

ENTRYPOINT (${HOME}/startH2.sh &) && ${HOME}/autoload.sh && tail -f /dev/null
