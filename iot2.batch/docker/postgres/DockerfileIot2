FROM openjdk:21 as builder
RUN $JAVA_HOME/bin/jlink \
         --verbose \
        --add-modules ALL-MODULE-PATH \
         --strip-debug \
         --no-man-pages \
         --no-header-files \
        --compress=2 \
         --output /customjre
from postgres
ENV USER postgres
ENV HOME  /home/${USER}
ENV LANG de_DE.utf8
ENV JAVA_HOME $HOME/jre-21
ENV POSTGRES_PASSWORD postgres 
ENV POSTGRES_DB=iot  

ENV APP_DIR ${HOME}/iot2

RUN localedef -i de_DE -c -f UTF-8 -A /usr/share/locale/locale.alias de_DE.UTF-8

RUN apt-get update -y
RUN apt-get install dos2unix -y 
RUN apt-get install --no-install-recommends -y dnsutils
RUN apt-get install --no-install-recommends -y curl

RUN mkdir   ${HOME}
RUN mkdir ${APP_DIR}

RUN mkdir ${HOME}/startup

COPY --from=builder /customjre $JAVA_HOME

COPY --chown=${USER}:${USER} docker/postgres/createUserAndSchema.sh  /docker-entrypoint-initdb.d/01-createUserAndSchema.sh
COPY --chown=${USER}:${USER} docker/postgres/iot-2-postgres.sql  /docker-entrypoint-initdb.d/iot-2-postgres
COPY --chown=${USER}:${USER} docker/postgres/loadData /docker-entrypoint-initdb.d/loadData
COPY --chown=${USER}:${USER} docker/postgres/loadData.sh /docker-entrypoint-initdb.d/02-loadData.sh

RUN dos2unix /docker-entrypoint-initdb.d/iot-2-postgres
RUN dos2unix /docker-entrypoint-initdb.d/01-createUserAndSchema.sh
RUN dos2unix /docker-entrypoint-initdb.d/loadData

COPY  --chown=${USER}:${USER} docker/scripts/iot2.sh ${APP_DIR}/
COPY --chown=${USER}:${USER}  docker/scripts/endOfDay.sh ${APP_DIR}/
COPY --chown=${USER}:${USER}  docker/postgres/backup.sh ${APP_DIR}/
COPY  --chown=${USER}:${USER} target/iot2Batch.jar ${APP_DIR}/
COPY  --chown=${USER}:${USER} docker/scripts/autoload.sh ${HOME}/


COPY --chown=${USER}:${USER} docker/scripts/calendar.csv   ${APP_DIR}/
COPY --chown=${USER}:${USER} docker/scripts/configuration.csv ${APP_DIR}/
RUN dos2unix ${APP_DIR}/iot2.sh
RUN dos2unix ${APP_DIR}/endOfDay.sh
RUN dos2unix ${APP_DIR}/backup.sh
RUN dos2unix ${HOME}/autoload.sh


RUN ln -s ${APP_DIR}/iot2.sh ${APP_DIR}/iot2
RUN ln -s ${APP_DIR}/endOfDay.sh ${APP_DIR}/endOfDay
RUN ln -s ${APP_DIR}/backup.sh ${APP_DIR}/backup

ENTRYPOINT docker-entrypoint.sh postgres & tail-f /dev/null 

ENV PATH $PATH:${JAVA_HOME}/bin:${APP_DIR}

RUN chown -R  ${USER} ${HOME}
RUN chgrp -R ${USER} ${HOME}

WORKDIR ${HOME}


ENTRYPOINT (docker-entrypoint.sh postgres &) && $HOME/autoload.sh && tail -f /dev/null
#ENTRYPOINT tail -f /dev/null


